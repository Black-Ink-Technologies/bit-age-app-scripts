name: Auto Tag & Purge jsDelivr CDN (Main Only)

on:
  push:
    branches:
      - main
    tags:
      - "*"
  workflow_dispatch:

jobs:
  tag-and-purge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get latest tag and bump version
        id: bump
        run: |
          # Get latest tag (fallback to 1.0.0 if none)
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "1.0.0")
          echo "Latest tag: $LATEST_TAG"

          # Split into components (major.minor.patch)
          IFS='.' read -r MAJOR MINOR PATCH <<< "${LATEST_TAG#v}"

          # Increment patch version
          PATCH=$((PATCH + 1))
          NEW_TAG="${MAJOR}.${MINOR}.${PATCH}"

          echo "New tag will be: $NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Create and push new tag
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          git tag $NEW_TAG
          git push origin $NEW_TAG
          echo "Created and pushed new tag: $NEW_TAG"

      - name: Mark tag as latest release
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          gh release create $NEW_TAG \
            --title "Release $NEW_TAG" \
            --notes "Automated release for version $NEW_TAG" \
            --latest

      - name: Purge jsDelivr CDN
        run: |
          declare -a CDN_URLS=(
            "https://purge.jsdelivr.net/gh/Black-Ink-Technologies/bit-age-app-scripts@1.x.x/script.develop.min.js"
            "https://purge.jsdelivr.net/gh/Black-Ink-Technologies/bit-age-app-scripts@1.x.x/script.staging.min.js"
            "https://purge.jsdelivr.net/gh/Black-Ink-Technologies/bit-age-app-scripts@1.x.x/script.min.js"
          )

          echo "Purging jsDelivr cache after tag: ${NEW_TAG}"

          for url in "${CDN_URLS[@]}"; do
            echo "Purging CDN: $url"
            RESPONSE=$(curl -X GET "$url")
            echo "Response: $RESPONSE"
          done
